<% include head.ejs %>
<% include navbar.ejs %>

<div class="container" ng-app="dsApp" ng-controller="PageDetailCtrl" ng-cloak>
<% include message.ejs %>

<div class="pagename" ng-click="openpage(page)">
    <h2>
        <small class="pull-right">{{page.start_date | date:'shortDate'}} - {{page.end_date | date:'shortDate'}}</small>
        {{page.name}}
    </h2>
    <p class="help-block" ng-show="page.desc">{{page.desc}}</p>
</div>

<div class="ds-Section">
    <div class="ds-Section-header">Incomes</div>
    <div class="ds-Section-income row" ng-repeat="income in incomes" ng-click="openincome(page, income, $index)">
        <div class="col-md-10">
            <span ng-if="income.balance_from" class="text-muted"><i class="glyphicon glyphicon-share-alt"></i> Balance from {{income.name}}</span>
            <span ng-if="!income.balance_from">{{income.name}}</span>
        </div>
        <div class="col-md-2 text-right">{{income.amount | currency}}</div>
    </div>
    <div class="ds-Section-income ds-Section-income--total row">
        <div class="col-md-7"><button type="button" class="btn btn-default btn-xs income-new" ng-click="openincome(page)">Add New Income</button></div>
        <div class="col-md-3 text-right"><b ng-if="incomes.length > 1">Total Income</b></div>
        <div class="col-md-2 text-right"><b ng-if="incomes.length > 1">{{_total_income | currency}}</b></div>
    </div>
    <br>
</div>

<div class="ds-Section">
    <div class="ds-Section-header">
        <button type="button" class="btn btn-default btn-sm pull-right" ng-click="opencategory(page, true)">Add New Category</button>
        Recurring Expenses
    </div>
    <div class="ds-Section-category" ng-repeat="category in categories | recurring:true | orderBy:'name'">
        <div class="ds-Section-categoryHeader row" ng-style="category._style" ng-click="opencategory(page, true, category)">
            <div class="col-md-4">
                <span ng-if="category.recurring" class="glyphicon glyphicon-refresh">&nbsp;</span>{{category.name}}
            </div>
            <div class="col-md-8">
                <small class="ds-Section-categoryDesc">{{category.desc}}</small>
            </div>
        </div>
        <div ng-repeat="expense in category.expenses">
            <div class="ds-Section-expense" ng-click="openexpense(category, expense, $index);">
            <div class="row">
                <div class="col-md-4">{{expense.where}}</div>
                <div class="col-md-4 ds-Section-expenseName"> 
                    <span ng-show="expense.tentative" class="label label-default pull-right">Tentative</span> 
                    {{expense.name}}
                </div>
                <div class="col-md-2 text-right">
                    <time class="ds-Section-expenseTime">{{expense.time | date:'longDate'}}</time>
                </div>
                <div class="col-md-2 text-right">{{expense.amount | currency}}</div>
            </div>
            </div>
        </div>
        <div class="ds-Section-expense ds-Section-expense--total">
            <div class="row">
            <div class="col-md-7"><button type="button" class="btn btn-xs btn-default" ng-click="openexpense(category)">Add New Expense</button></div>
            <div class="col-md-3 text-right text-muted"><b ng-if="category.expenses.length > 1">Total</b></div>
            <div class="col-md-2 text-right text-muted"><b ng-if="category.expenses.length > 1">{{category._total | currency}}</b></div>
            </div>
        </div>
    </div>
    <div class="ds-Section-footer">
        <div class="ds-Section-expense ds-Section-expense--total">
            <div class="row">
                <div class="col-md-10 text-right"><b>Total Recurring Expenses</b></div>
                <div class="col-md-2 text-right"><b>{{_total_recurring | currency}}</b></div>
            </div>
        </div>
    </div>
</div>

<div class="ds-Section">
    <div class="ds-Section-header">
        <button type="button" class="btn btn-default btn-sm pull-right" ng-click="opencategory(page, false)">Add New Category</button>
        Budgets / Expenses
    </div>
    <div class="ds-Section-category" ng-repeat="category in categories | recurring:false | orderBy:'name'">
        <div class="ds-Section-categoryHeader row" ng-style="category._style" ng-click="opencategory(page, false, category)">
            <div class="col-md-4">
                <span ng-if="category.recurring" class="glyphicon glyphicon-refresh">&nbsp;</span>{{category.name}}
            </div>
            <div class="col-md-4">
                <small class="ds-Section-categoryDesc">{{category.desc}}</small>
            </div>
            <div class="col-md-2 text-right"><span class="half-opacity">Budget</span></div>
            <div class="col-md-2">
                <span class="pull-right text-right">{{category.budget | currency}}</span>
                <!-- <span class="pull-right">Budget</span>-->
            </div>
        </div>
        <div ng-repeat="expense in category.expenses">
            <div class="ds-Section-expense" ng-click="openexpense(category, expense, $index);">
            <div class="row">
                <div class="col-md-4">{{expense.where}}</div>
                <div class="col-md-4 ds-Section-expenseName"> 
                    <span ng-show="expense.tentative" class="label label-default pull-right">Tentative</span> 
                    {{expense.name}}
                </div>
                <div class="col-md-2 text-right">
                    <time class="ds-Section-expenseTime">{{expense.time | date:'longDate'}}</time>
                </div>
                <div class="col-md-2 text-right">
                    {{expense.amount | currency}}
                </div>
            </div>
            </div>
        </div>
        <div class="ds-Section-expense ds-Section-expense--total row">
            <div class="col-md-7"><button type="button" class="btn btn-default btn-xs expense-new" ng-click="openexpense(category)">Add New Expense</button></div>
            <div class="col-md-3 text-right text-muted"><b ng-if="category.expenses.length > 0">Remaining</b></div>
            <div class="col-md-2 text-right text-muted"><b ng-if="category.expenses.length > 0">{{category._remaining | currency}}</b></div>
        </div>
    </div>
</div>

<script type="text/ng-template" id="expensedialog.html">
<form ng-submit="ok()">
    <div class="modal-header">
        <h3><span ng-if="_new">New</span> Expense <small>for {{category.name}}</small></h3>
    </div>
    <div class="modal-body">
        <div class="form-group">
            <label for="time">Date</label><br>
            <p class="input-group">
                <input type="text" ng-model="expense.time" class="form-control" datepicker-popup="longDate" is-open="$parent.dpopen" required/>
                <span class="input-group-btn">
                    <button class="btn btn-default" ng-click="opendatepicker($event)"><i class="glyphicon glyphicon-calendar"></i></button>
                </span>
            </p>
        </div>
        <div class="form-group">
            <label for="amount">Amount</label><br>
            <input type="text" ng-model="expense.amount" class="form-control" placeholder="0.00" required/>
        </div>
        <div class="form-group">
            <label for="where">Where</label><br>
            <input type="text" ng-model="expense.where" class="form-control" placeholder="Target" required/>
        </div>
        <div class="form-group">
            <label for="name">Note</label><br>
            <input type="text" ng-model="expense.name" class="form-control" placeholder=""/>
        </div>
        <input type="checkbox" ng-model="expense.tentative"/> 
        This is a scheduled (tentative) expense. Don't subtract it from the remainin yet.
    </div>
    <div class="modal-footer">
        <button class="btn pull-left" type="button" ng-show="!_new" ng-click="remove()">Remove</button>
        <button class="btn btn-primary" type="submit">OK</button>
        <button class="btn btn-default" type="button" ng-click="cancel()">Cancel</button>
    </div>
</form>
</script>

<script type="text/ng-template" id="incomedialog.html">
<form ng-submit="ok()">
    <div class="modal-header">
        <h3><span ng-if="_new">New</span> Income</h3>
    </div>
    <div class="modal-body">
        <input type="checkbox" ng-model="$parent._is_balance"/> Use balance from another page. 
        <div ng-show="!$parent._is_balance">
            <div class="form-group">
                <label for="amount">Amount</label><br>
                <input type="text" ng-model="income.amount" class="form-control" placeholder="0.00" ng-required="!$parent._is_balance"/>
            </div>
            <div class="form-group">
                <label for="name">Note</label><br>
                <input type="text" ng-model="income.name" class="form-control"/>
            </div>
        </div>
        <div ng-show="$parent._is_balance">
            <select class="form-control" ng-model="$parent._balance_from" ng-options="page.name for page in pages | orderBy:'-end_date'"/>
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn pull-left" type="button" ng-show="!_new" ng-click="remove()">Remove</button>
        <button class="btn btn-primary" type="submit">OK</button>
        <button class="btn btn-default" type="button" ng-click="cancel()">Cancel</button>
    </div>
</form>
</script>

<script type="text/ng-template" id="categorydialog.html">
<form ng-submit="ok()">
    <div class="modal-header">
        <h3>
            <span ng-if="_new">New Category</span>
            <span ng-if="!_new">Update Category</span>
        </h3>
    </div>
    <div class="modal-body">
        <div class="form-group">
            <label for="name">Name</label><br>
            <input type="text" ng-model="category.name" class="form-control" required/>
        </div>
        <div class="form-group">
            <label for="desc">Note</label><br>
            <input type="text" ng-model="category.desc" class="form-control"/>
        </div>
        <div ng-if="!category.recurring" class="form-group">
            <label for="amount">Amount</label><br>
            <input type="text" ng-model="category.budget" class="form-control" placeholder="0.00" required/>
        </div>
        <div ng-if="!category.recurring" class="form-group">
            <label for="color">Color</label><br>
            <input colorpicker colorpicker-position="bottom" type="text" ng-model="category.color" class="form-control" required/>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn pull-left" ng-show="!_new" ng-click="remove()" ng-confirm-click="Are you sure to remove this category?">Remove</button>
        <button type="submit" class="btn btn-primary">OK</button>
        <button type="button" class="btn btn-default" ng-click="cancel()">Cancel</button>
    </div>
</form>
</script>

<script type="text/ng-template" id="pagedialog.html">
<form ng-submit="ok()">
    <div class="modal-header">
        <h3><span ng-if="_new">New </span>Page</h3>
    </div>
    <div class="modal-body">
        <div class="form-group">
            <label>Name</label><br>
            <input type="text" ng-model="page.name" class="form-control" required/>
        </div>
        <div class="form-group">
            <label>Note</label><br>
            <input type="text" ng-model="page.desc" class="form-control"/>
        </div>
        <div class="form-group">
            <label>Start Date</label><br>
            <p class="input-group">
                <input type="text" ng-model="page.start_date" class="form-control" datepicker-popup="longDate" is-open="$parent.startdpopen" required/>
                <span class="input-group-btn">
                    <button class="btn btn-default" ng-click="openstartdatepicker($event)"><i class="glyphicon glyphicon-calendar"></i></button>
                </span>
            </p>
        </div>
        <div class="form-group">
            <label>End Date</label><br>
            <p class="input-group">
                <input type="text" ng-model="page.end_date" class="form-control" datepicker-popup="longDate" is-open="$parent.enddpopen" required/>
                <span class="input-group-btn">
                    <button class="btn btn-default" ng-click="openenddatepicker($event)"><i class="glyphicon glyphicon-calendar"></i></button>
                </span>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn pull-left" ng-show="!_new" ng-click="remove()" ng-confirm-click="Are you sure to remove this page?">Remove</button>
        <button type="submit" class="btn btn-primary">OK</button>
        <button type="button" class="btn btn-default" ng-click="cancel()">Cancel</button>
    </div>
</form>
</script>

<% include footer.ejs %>
</div><!--container-->
<% include tail.ejs %>

<script>
var dsApp = angular.module('dsApp', ['ui.bootstrap', 'angularFileUpload']);
/*
dsApp.directive('format', ['$filter', function ($filter) {
    return {
        require: '?ngModel',
        link: function (scope, elem, attrs, ctrl) {
            if (!ctrl) return;
            ctrl.$formatters.unshift(function (a) {
                return $filter(attrs.format)(ctrl.$modelValue)
            });
            ctrl.$parsers.unshift(function (viewValue) {
                elem.priceFormat({
                    prefix: '',
                    centsSeparator: ',',
                    thousandsSeparator: '.'
                });                
                return elem[0].value;
            });
        }
    };
}]);
*/

dsApp.directive('ngConfirmClick', [
    function() {
        return {
            priority: 1, //make sure this directive gets processed first
            terminal: true, //don't let angular run ng-click
            link: function (scope, element, attr) {
                var msg = attr.ngConfirmClick || "Are you sure?";
                var clickAction = attr.ngClick;
                element.bind('click',function (event) {
                    $(".dropdown").removeClass("open");
                    if ( window.confirm(msg) ) {
                        scope.$eval(clickAction)
                        scope.$apply(); //scope application doesn't happen for some reason
                    }
                });
            }
        }
    }
]);

function ExpenseCtrl($scope, $modalInstance, category, expense) {
    $scope.category = category;
    $scope.expense = expense;
    if(!$scope.expense) {
        $scope._new = true;
        $scope.expense = {
            time: new Date().getTime()
        };
    }
    $scope.opendatepicker = function($event) {
        $event.preventDefault();
        $event.stopPropagation();
        $scope.dpopen = true;
    };
    $scope.remove = function() {
        $modalInstance.dismiss('remove');
    };
    $scope.ok = function() {
        $modalInstance.close($scope);
    };
    $scope.cancel = function() {
        $modalInstance.dismiss('cancel');
    };
};
ExpenseCtrl.$inject = ['$scope', '$modalInstance', 'category', 'expense'];

function CategoryCtrl($scope, $modalInstance, page, category, recurring) {
    $scope.page = page;
    $scope.category = category;
    if(!$scope.category) {
        $scope._new = true;
        $scope.category = {
            page_id: page._id, 
            recurring: recurring, 
            color: "#909090",
            expenses: []  
        };
    }
    $scope.category.recurring = recurring;
    $scope.opendatepicker = function($event) {
        $event.preventDefault();
        $event.stopPropagation();
        $scope.dpopen = true;
    };
    $scope.remove = function() {
        $modalInstance.dismiss('remove');
    };
    $scope.ok = function() {
        $modalInstance.close($scope);
    };
    $scope.cancel = function() {
        $modalInstance.dismiss('cancel');
    };
};
CategoryCtrl.$inject = ['$scope', '$modalInstance', 'page', 'category', 'recurring'];

function IncomeCtrl($scope, $http, $modalInstance, page, income) {

    //load pages for balance income
    $scope.pages = []; 
    $http.get('/docs').success(function(docs) {
        //find doc we want..
        docs.forEach(function(doc) {
            if(doc._id == page.doc_id) {
                doc.pages.forEach(function(p) {
                    //in order to avoid circular reference, let's allow user to select balance from previous months
                    if(p.end_date <= page.start_date) {
                        $scope.pages.push(p);
                    }
                });
            }
        });
        if($scope.income.balance_from) {
            //search for selected page
            $scope.pages.forEach(function(p) {
                if(p._id == $scope.income.balance_from) {
                    $scope._balance_from = p; 
                }
            });
        }
    });

    $scope.page = page;
    $scope.income = income;
    if(!$scope.income) {
        $scope._new = true;
        $scope.income = {page_id: page._id};
    }

    $scope._is_balance = false;
    if($scope.income.balance_from) {
        $scope._is_balance = true;
    }

    $scope.opendatepicker = function($event) {
        $event.preventDefault();
        $event.stopPropagation();
        $scope.dpopen = true;
    };
    $scope.remove = function() {
        $modalInstance.dismiss('remove');
    };
    $scope.ok = function() {
        if($scope._balance_from) {
            $scope.income.balance_from = $scope._balance_from._id;

            //following will be reset when page is loaded to the actual value
            $scope.income.page_name = $scope._balance_from.name; 
            //get page balance
            $http.get('/page/balance/'+$scope._balance_from._id).success(function(amount) {
                $scope.income.amount = amount;
                $modalInstance.close($scope);
            });
        } else {
            $modalInstance.close($scope);
        }
    };
    $scope.cancel = function() {
        $modalInstance.dismiss('cancel');
    };
};
IncomeCtrl.$inject = ['$scope', '$http', '$modalInstance', 'page', 'income'];

dsApp.filter('recurring', function() {
    return function(input, b) {
        var out = [];
        if(input) {
            for (var i = 0; i < input.length; i++) {
                if(input[i].recurring == b){
                    out.push(input[i]);
                }
            }
        }
        return out;
    }
});

dsApp.controller('PageDetailCtrl', ['$scope', '$http', '$modal', '$location',
function($scope, $http, $modal, $location) {
    $scope.page = <%-JSON.stringify(page)%>;
    $scope.incomes = <%-JSON.stringify(incomes)%>;
    $scope.categories = <%-JSON.stringify(categories)%>;
    update();

    //parse color like #ff1122, and return resaturated value
    function lightcolor(color) {
        var r = parseInt(color.substring(1,3), 16);
        var g = parseInt(color.substring(3,5), 16);
        var b = parseInt(color.substring(5,7), 16);

        r = Math.floor((256+r)/2);
        g = Math.floor((256+g)/2);
        b = Math.floor((256+b)/2);

        var hr = r.toString(16);
        var hg = g.toString(16);
        var hb = b.toString(16);
        if (hr.length == 1) hr = '0' + hr;
        if (hg.length == 1) hg = '0' + hg;
        if (hb.length == 1) hb = '0' + hb;
        var c = '#' + hr + hg + hb;
        return '#' + hr + hg + hb;
    }

    //recompute various derived values
    function update() {
        var total_income = 0;
        $scope.incomes.forEach(function(income) {
            total_income += parseFloat(income.amount);
        });
        $scope._total_income = total_income;
        $scope._total_recurring = 0;
        $scope.categories.forEach(function(category) {
            var total_expense = 0;
            if(category.expenses) {
                category.expenses.forEach(function(expense) {
                    if(!expense.tentative) {
                        total_expense += parseFloat(expense.amount);
                    }
                });
            }
            category._style = {"background-color": lightcolor(category.color)};
            category._total = total_expense; 
            category._remaining = category.budget - total_expense;
            $scope._total_recurring += total_expense;
        });
    }

    $scope.opencategory = function(page, recurring, category /*no cid! - see below*/) {
        //cant' rely on cid because we display 2 lists (one for recurring and another for non-recurring..)
        var modal = $modal.open({
            templateUrl: 'categorydialog.html',
            controller: CategoryCtrl,
            resolve: {
                page: function() { return page; },
                category: function() { return angular.copy(category); }, //send copy instead of the actual $scope object
                recurring: function() { return recurring; }
            }
        });
        modal.result.then(function(scope) {
            $http.post('/category', {
                _csrf: '<%=_csrf%>',
                category: scope.category
            }).success(function(newid) {
                if(category == undefined) {
                    scope.category._id = newid; //reset _id on expense I just added
                }
            }).error(function(data, status, headers, config) {
                alert('Oops.. Something went wrong! Please refer to dsBudget support forum.');
                console.error(data);
            });

            if(category != undefined) {
                //need to find the idx - because I can't rely on cid
                for(var x = 0;x < $scope.categories.length;x++) {
                    if($scope.categories[x]._id == scope.category._id) {
                        $scope.categories[x] = scope.category;
                        break;
                    }
                };
            } else {
                $scope.categories.push(scope.category); //new
            }
            update();

        }, function(dismiss) {
            if(dismiss == "remove") {
                $http.delete('/category/'+category._id, {
                    params: {},
                    headers: {'x-csrf-token': '<%=_csrf%>'}
                }).success(function() {
                    //as expected
                }).error(function(data, status, headers, config) {
                    alert('Oops.. Something went wrong! Please refer to dsBudget support forum.');
                    console.error(data);
                });
                //need to find the idx - because I can't rely on cid
                for(var x = 0;x < $scope.categories.length;x++) {
                    if($scope.categories[x]._id == category._id) {
                        $scope.categories.splice(x, 1);
                        break;
                    }
                };
                update();
            }
        });
    };

    $scope.openexpense = function(category, expense, eid) {
        var modal = $modal.open({
            templateUrl: 'expensedialog.html',
            controller: ExpenseCtrl,
            resolve: {
                category: function() { return category; },
                expense: function() { return angular.copy(expense); } //send copy instead of the actual $scope.expense
            }
        });
        modal.result.then(function(scope) {
            if(eid == undefined) {
                //new expense.. do post
                $http.post('/expense/'+scope.category._id, {
                    _csrf: '<%=_csrf%>',
                    expense: scope.expense
                }).success(function(newid) {
                    scope.expense._id = newid;
                }).error(function(data, status, headers, config) {
                    alert('Oops.. Something went wrong! Please refer to dsBudget support forum.');
                    console.error(data);
                });
            } else {
                //updating an expense.. do put
                $http.put('/expense/'+scope.category._id+'/'+eid, {
                    _csrf: '<%=_csrf%>',
                    expense: scope.expense
                }).success(function(newid) {
                    //anything to do?
                }).error(function(data, status, headers, config) {
                    alert('Oops.. Something went wrong! Please refer to dsBudget support forum.');
                    console.error(data);
                });
            }

            if(eid != undefined) {
                category.expenses[eid] = scope.expense;
            } else {
                category.expenses.push(scope.expense);
            }
            update();
        }, function(dismiss) {
            if(dismiss == "remove") {
                $http.delete('/expense/'+category._id+'/'+eid, {
                    params: {},
                    headers: {'x-csrf-token': '<%=_csrf%>'}
                }).success(function() {
                    //as expected
                }).error(function(data, status, headers, config) {
                    alert('Oops.. Something went wrong! Please refer to dsBudget support forum.');
                    console.error(data);
                });
                category.expenses.splice(eid, 1);
                update();
            }
        });
    };

    $scope.openincome = function(page, income, iid) {
        var modal = $modal.open({
            templateUrl: 'incomedialog.html',
            controller: IncomeCtrl,
            resolve: {
                page: function() { return page; },
                income: function() { return angular.copy(income); } //send copy instead of the actual $scope object
            }
        });

        modal.result.then(function(scope) {
            $http.post('/income', {
                _csrf: '<%=_csrf%>',
                income: scope.income
            }).success(function(newid) {
                if(iid == undefined) {
                    scope.income._id = newid; //reset for adding new income
                }
            }).error(function(data, status, headers, config) {
                alert('Oops.. Something went wrong! Please refer to dsBudget support forum.');
                console.error(data);
            });
            if(iid != undefined) {
                $scope.incomes[iid] = scope.income;
            } else {
                $scope.incomes.push(scope.income);
            }
            update();
        }, function(dismiss) {
            if(dismiss == "remove") {
                $http.delete('/income/'+income._id, {
                    params: {},
                    headers: {'x-csrf-token': '<%=_csrf%>'}
                }).success(function() {
                    //as expected..
                }).error(function(data, status, headers, config) {
                    alert('Oops.. Something went wrong! Please refer to dsBudget support forum.');
                    console.error(data);
                });
                $scope.incomes.splice(iid, 1);
                update();
            }
        });
    };

    $scope.openpage = function(page) {
        var modal = $modal.open({
            templateUrl: 'pagedialog.html',
            controller: PageCtrl,
            resolve: {
                page: function() { return angular.copy(page); } //send copy instead of the acturla page
            }
        });
        modal.result.then(function(scope) {
            $http.put('/page/'+page._id, {
                _csrf: '<%=_csrf%>',
                page: scope.page
            }).success(function() {
                //as expected..
            }).error(function(data, status, headers, config) {
                alert('Oops.. Something went wrong! Please refer to dsBudget support forum.');
                console.error(data);
            });
            $scope.page = scope.page;
            update();
        }, function(dismiss) {
            if(dismiss == "remove") {
                $http.delete('/page/'+page._id, {
                    params: {},
                    headers: {'x-csrf-token': '<%=_csrf%>'}
                }).success(function() {
                    document.location = "/list"; 
                }).error(function(data, status, headers, config) {
                    alert('Oops.. Something went wrong! Please refer to dsBudget support forum.');
                    console.error(data);
                });
            }
        });
    };
}]);

function PageCtrl($scope, $modalInstance, page) {
    $scope.page = page;
    if(!$scope.page) {
        $scope._new = true;
        $scope.page = {name: "New Page"};
    }
    $scope.openstartdatepicker = function($event) {
        $event.preventDefault();
        $event.stopPropagation();
        $scope.startdpopen = true;
    };
    $scope.openenddatepicker = function($event) {
        $event.preventDefault();
        $event.stopPropagation();
        $scope.enddpopen = true;
    };
    $scope.ok = function() {
        $modalInstance.close($scope);
    };
    $scope.cancel = function() {
        $modalInstance.dismiss('cancel');
    };
    $scope.remove = function() {
        $modalInstance.dismiss('remove');
    };
};
PageCtrl.$inject = ['$scope', '$modalInstance', 'page'];

</script>

